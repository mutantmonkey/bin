#!/usr/bin/python3

import argparse
import json
import os.path
import requests
import subprocess
import urllib.parse

parser = argparse.ArgumentParser(
    description="Search for and play a radio station using radio-browser.info")
parser.add_argument('--search-only', '-n', action='store_true',
                    help="Don't play the station, search only")
parser.add_argument('query', nargs='+')
args = parser.parse_args()

query = ' '.join(args.query)
station = None

try:
    configpath = os.path.expanduser('~/.config/radio/stations.json')
    with open(configpath) as f:
        stations = json.load(f)
        station = stations.get(query)
except Exception as exc:
    print("Failed to check local stations file: {0}".format(exc))

if station is None:
    r = requests.get(
        'http://www.radio-browser.info/webservice/json/stations/byname/'
        '{0}'.format(urllib.parse.quote(query)))
    results = r.json()
    if len(results) > 0:
        r = requests.get(
            'http://www.radio-browser.info/webservice/json/url/'
            '{0}'.format(results[0]['id']))
        try:
            data = r.json()
            station = data[0]
        except json.decoder.JSONDecodeError:
            # Unbelievably, radio-browser.info fails to quote the station name,
            # so fall back to the search results if decoding fails
            station = results[0]

if station is None:
    print("No stations found")
else:
    print(station['name'])
    print(station['url'])

    if not args.search_only:
        subprocess.call(['mpc', '-q', 'clear'])
        subprocess.call(['mpc', '-q', 'add', station['url']])
        subprocess.call(['mpc', '-q', 'play'])
